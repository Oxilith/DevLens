@page "/"
@inject IWebHostEnvironment Environment

<PageTitle>DevLens</PageTitle>

@if (WelcomeSection != null)
{
    <WelcomeSection Section="WelcomeSection"/>

    <MarkdownSectionChildCards Section="KeyFeaturesSections" Style="@CardStyle"/>
    <hr/>
    <MarkdownFullWidthSectionCard Section="ArchitectureSection" Style="@CardStyle"/>
    <hr/>
    <MarkdownFullWidthSectionCard Section="ContactSection" Style="@CardStyle"/>
}
else
{
    <div class="alert alert-warning" role="alert">README.md file not found or could not be read.</div>
}

@code {
    [Inject] ILogger<Home>? Logger { get; set; }
    private const string CardStyle = "background: linear-gradient(to bottom, #081b38, #003f66); color: white;";

    protected override void OnInitialized()
    {
        var readmePaths = new[]
        {
            Path.Combine(Environment.ContentRootPath, "README.md"),
            Path.Combine(Environment.ContentRootPath, "..", "README.md")
        };

        foreach (var path in readmePaths)
        {
            Logger?.LogInformation($"Looking for README.md at: {path}");

            if (!File.Exists(path)) continue;
            Logger?.LogInformation($"Reading README.md from: {path}");

            var markdown = File.ReadAllText(path);
            var parser = new MarkdownParser();
            var sections = parser.ParseMarkdown(markdown, new MarkdownPipelineBuilder().Build());

            WelcomeSection = sections.ChildSections.FirstOrDefault(x => x.Title.Contains("Welcome"));
            KeyFeaturesSections = WelcomeSection?.ChildSections.FirstOrDefault(x => x.Title.Contains("Key Features"));
            ArchitectureSection = WelcomeSection?.ChildSections.FirstOrDefault(x => x.Title.Contains("Architecture"));
            ContactSection = WelcomeSection?.ChildSections.FirstOrDefault(x => x.Title.Contains("Contact"));
        }

        base.OnInitialized();
    }

    public MarkdownSection? ContactSection { get; set; }

    public MarkdownSection? ArchitectureSection { get; set; }

    public MarkdownSection? KeyFeaturesSections { get; set; }

    public MarkdownSection? WelcomeSection { get; set; }

}